{
  "version": "1",
  "cognitoConfig": {
    "identityPoolName": "testAuthIdentityPool",
    "allowUnauthenticatedIdentities": true,
    "resourceNameTruncated": "geonot3ca68ea9",
    "userPoolName": "GeoNotes",
    "autoVerifiedAttributes": [
      "email"
    ],
    "mfaConfiguration": "OFF",
    "mfaTypes": [
      "SMS Text Message"
    ],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "GeoNotes Verification Code",
    "emailVerificationMessage": "<div style=\"background-color:#3a3f44; text-align: center; font-family: 'Courier New'; height: 100vh\">\n    <h1 style=\"color:#a89753\"> Your GeoNotes Code: </h1>\n    <div style=\"color:white; font-family:'Arial'; font-size:32px; width: 60%; background-color:grey; text-align: center; margin: auto\">\n{####}\n    </div>\n    <p style=\"color:yellow\">Note: This code expires in 1 hour.</p>\n    <hr style=\"width:90%\">\n    <p style=\"color:white; font-size: 12px\">Didn't request a code?  You can ignore this email.</p>\n    <hr style=\"width:90%\">\n</div>",
    "defaultPasswordPolicy": false,
    "passwordPolicyMinLength": 8,
    "passwordPolicyCharacters": [
      "Requires Lowercase",
      "Requires Numbers",
      "Requires Uppercase"
    ],
    "requiredAttributes": [
      "email",
      "family_name",
      "name",
      "picture"
    ],
    "aliasAttributes": [],
    "userpoolClientGenerateSecret": false,
    "userpoolClientRefreshTokenValidity": 30,
    "userpoolClientWriteAttributes": [],
    "userpoolClientReadAttributes": [],
    "userpoolClientLambdaRole": "GeoNot3ca68ea9_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": false,
    "sharedId": "3ca68ea9",
    "resourceName": "GeoNotes",
    "authSelections": "identityPoolAndUserPool",
    "serviceName": "Cognito",
    "usernameAttributes": [
      "email"
    ],
    "useDefault": "manual",
    "userPoolGroups": false,
    "userPoolGroupList": [],
    "adminQueries": false,
    "thirdPartyAuth": false,
    "authProviders": [],
    "usernameCaseSensitive": false,
    "useEnabledMfas": true,
    "authRoleArn": {
      "Fn::GetAtt": [
        "AuthRole",
        "Arn"
      ]
    },
    "unauthRoleArn": {
      "Fn::GetAtt": [
        "UnauthRole",
        "Arn"
      ]
    },
    "breakCircularDependency": true,
    "dependsOn": []
  }
}